// Interface for basic account functionality
interface Account {
    void deposit(double amount);
    void withdraw(double amount);
    double checkBalance();
}

// Abstract class for common account properties
abstract class BankAccount implements Account {
    private String accountNumber;
    private double balance;

    BankAccount(String accountNumber, double initialBalance) {
        this.accountNumber = accountNumber;
        this.balance = initialBalance;
    }

    @Override
    public void deposit(double amount) {
        balance += amount;
        System.out.println("Deposited: " + amount);
    }

    @Override
    public void withdraw(double amount) {
        if (balance >= amount) {
            balance -= amount;
            System.out.println("Withdrawn: " + amount);
        } else {
            System.out.println("Insufficient funds");
        }
    }

    @Override
    public double checkBalance() {
        return balance;
    }
}

// Savings Account class
class SavingsAccount extends BankAccount {
    private double interestRate;

    SavingsAccount(String accountNumber, double initialBalance, double interestRate) {
        super(accountNumber, initialBalance);
        this.interestRate = interestRate;
    }

    // Additional method specific to SavingsAccount
    void addInterest() {
        double interest = checkBalance() * interestRate / 100;
        deposit(interest);
        System.out.println("Interest added: " + interest);
    }
}

// Checking Account class
class CheckingAccount extends BankAccount {
    CheckingAccount(String accountNumber, double initialBalance) {
        super(accountNumber, initialBalance);
    }
}

// Loan Account class
class LoanAccount extends BankAccount {
    private double interestRate;

    LoanAccount(String accountNumber, double initialBalance, double interestRate) {
        super(accountNumber, initialBalance);
        this.interestRate = interestRate;
    }

    // Additional method specific to LoanAccount
    void calculateInterest() {
        double interest = checkBalance() * interestRate / 100;
        System.out.println("Interest for loan: " + interest);
    }
}

// Main class to demonstrate the usage
public class Main {
    public static void main(String[] args) {
        // Creating instances of different account types
        SavingsAccount savingsAccount = new SavingsAccount("SA123", 1000.0, 2.5);
        CheckingAccount checkingAccount = new CheckingAccount("CA456", 2000.0);
        LoanAccount loanAccount = new LoanAccount("LA789", -5000.0, 8.0);

        // Performing operations on accounts
        savingsAccount.deposit(500.0);
        savingsAccount.addInterest();
        System.out.println("Savings Account Balance: " + savingsAccount.checkBalance());

        checkingAccount.withdraw(100.0);
        System.out.println("Checking Account Balance: " + checkingAccount.checkBalance());

        loanAccount.calculateInterest();
    }
}

